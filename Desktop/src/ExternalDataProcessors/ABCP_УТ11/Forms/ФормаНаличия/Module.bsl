//НСИ Администрирование -> CRM и Маркетинг -> Маркетинг -> Несколько видов цен

&НаСервере
Процедура ПодтвердитьЗаменыНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ПодтвердитьЗамены(Команда)
	ПодтвердитьЗаменыНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбновитьЦеныНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаСервере
Процедура ОбновитьЦеныПродажиНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЦеныПродажи(Команда)
	ОбновитьЦеныПродажиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ИзменитьСтатусыНаСайтеНаСервере()
	Если Объект.КодСтатусаСНаличия = 0 Тогда
		сообщить("Не выбран код статуса ""С наличия""");
		Возврат;
	КонецЕсли;
	КодСтатуса = Формат(Объект.КодСтатусаСНаличия, "ЧГ=0");
	distributorId = Формат(Объект.ИдентификаторПоставщика,"ЧГ=0");
	ТЗ = Объект.ТаблицаНаличия.Выгрузить(, "НомерЗаявки");
	ТЗ.Свернуть("НомерЗаявки",);
	Структура = Новый Структура("НомерЗаявки");
	Структура.Вставить("Изменять", Истина);
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Для Каждого ТекСтрока Из ТЗ Цикл
		Если ТекСтрока.НомерЗаявки = 0 Тогда
			Продолжить;
		КонецЕсли;
		ПереченьПозиций = "";
		Структура.НомерЗаявки = ТекСтрока.НомерЗаявки;
		НайденныеСтроки = Объект.ТаблицаНаличия.НайтиСтроки(Структура);
		НС = 0;
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			Если НайденнаяСтрока.ИдентификаторНоменклатуры = 0 Тогда
				Продолжить;
			КонецЕсли;
			НС = НС + 1;
			ПереченьПозиций = ПереченьПозиций + "&order[positions]["+Формат(НС,"ЧГ=0")+"][id]="+Формат(НайденнаяСтрока.ИдентификаторНоменклатуры,"ЧГ=0")+"&order[positions]["+Формат(НС,"ЧГ=0")+"][statusCode]="+КодСтатуса+"&order[positions]["+Формат(НС,"ЧГ=0")+"][distributorId]="+distributorId;
		КонецЦикла;
		ОбработкаОбъект.ОбновитьСтатусЗаявки(ТекСтрока.НомерЗаявки, ПереченьПозиций, КодСтатуса,,Истина);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьСтатусыНаСайте(Команда)
	ИзменитьСтатусыНаСайтеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьЦеныПродажиНаСервере()
	Если НЕ ЗначениеЗаполнено(Объект.ВидЦеныПродажи) Тогда
		Возврат;
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЦеныНоменклатурыСрезПоследних.Цена,
		|	ЦеныНоменклатурыСрезПоследних.Номенклатура
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|			&НаДату,
		|			Номенклатура В (&Номенклатура)
		|				И ВидЦены = &ВидЦены
		|				И Валюта = &Валюта) КАК ЦеныНоменклатурыСрезПоследних";
	
	Запрос.УстановитьПараметр("ВидЦены", Объект.ВидЦеныПродажи);
	Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
	Запрос.УстановитьПараметр("Валюта", Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("Номенклатура", Объект.ТаблицаНаличия.Выгрузить(,"Номенклатура").ВыгрузитьКолонку("Номенклатура"));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Структура = Новый Структура("Номенклатура");
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Структура.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
		НайденныеСтроки = Объект.ТаблицаНаличия.НайтиСтроки(Структура);
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			НайденнаяСтрока.ЦенаПродажиСклад = ВыборкаДетальныеЗаписи.Цена;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьЦеныПродажи(Команда)
	ПерезаполнитьЦеныПродажиНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//при открытии заполняем данными из ТЗНоменклатура
	ИмяПользователя = "Администратор";//фоновое задание запускается без пользователя
	КлючОбъекта = "ABCP_1C";
	КлючНастроек = "ТаблицаНаличия";
	Попытка
		Настройки = ХранилищеОбщихНастроек.Загрузить(КлючОбъекта, КлючНастроек, ,ИмяПользователя);
		ТЗ = Настройки.ТаблицаНаличия;
		Объект.КодСтатусаСНаличия = Настройки.КодСтатусаСНаличия;
		Объект.ВидЦены = Настройки.ВидЦены;
		Объект.Склад = Настройки.Склад;
		//Объект.ТаблицаНаличия.Загрузить(ПолучитьИзВременногоХранилища("ТаблицаНаличия"));
	Исключение
		сообщить("Через ХранилищеОбщихНастроек не передана таблица");
	КонецПопытки;
	Объект.ТаблицаНаличия.Загрузить(ТЗ);
	Если ЗначениеЗаполнено(Объект.ВидЦеныПродажи) Тогда
		ПерезаполнитьЦеныПродажиНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПередЗакрытиемНаСервере()
	ИмяПользователя = "Администратор";//фоновое задание запускается без пользователя
	КлючОбъекта = "ABCP_1C";
	КлючНастроек = "ТаблицаНаличия";
	Попытка
		ХранилищеОбщихНастроек.Удалить(КлючОбъекта, КлючНастроек,ИмяПользователя);
	Исключение
		сообщить("Не удалось удалить таблицу в ХранилищеОбщихНастроек");
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	ПередЗакрытиемНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ВидЦеныПродажиПриИзменении(Элемент)
	ПерезаполнитьЦеныПродажиНаСервере();
КонецПроцедуры
	//ЖирныйШрифт = Новый Шрифт(,,Истина);
	//Для Каждого СтрокаСписка Из ОформленияСтрок Цикл
	//	Изменять = СтрокаСписка.ДанныеСтроки.Изменять;
	//	Если Изменять Тогда
	//   		СтрокаСписка.Шрифт = ЖирныйШрифт;
	//	КонецЕсли;
	//КонецЦикла;
